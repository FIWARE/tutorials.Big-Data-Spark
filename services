#!/bin/bash
#
#  Command Line Interface to start all services associated with the Getting-Started Tutorial
#
#  For this tutorial the commands are merely a convenience script to run docker-compose
#

set -e

loadData () {
	./provision-devices
	echo ""
}

stoppingContainers () {
	echo "Stopping containers"
	docker-compose --log-level ERROR -p fiware down -v --remove-orphans
}

if (( $# != 1 )); then
    echo "Illegal number of parameters"
    echo "usage: services [create|start|stop]"
    exit 1
fi

command="$1"
case "${command}" in
	"help")
        echo "usage: services [create|start|stop]"
        ;;
    "start")
		stoppingContainers
		echo -e "Starting one container \033[1;30mTutorial\033[0m"
		echo -e "- \033[1;30mTutorial\033[0m acts as a series of dummy IoT Sensors over HTTP"
		echo ""
		docker-compose --log-level ERROR -p fiware up -d --remove-orphans
		loadData
		echo -e "Now open \033[4mhttp://localhost:3000/device/monitor\033[0m"
		;;
	"stop")
		stoppingContainers
		;;
	"create")
		echo "Pulling Docker images"
		docker-compose --log-level ERROR -p fiware pull
		echo -e "Pulling \033[1;34mCosmos Spark\033[0m connector"
		curl -LO https://github.com/ging/fiware-cosmos-orion-spark-connector/releases/download/FIWARE_7.9/orion.spark.connector-1.2.1.jar
		mv orion.spark.connector-1.2.1.jar cosmos-examples/orion.spark.connector-1.2.1.jar
		;;
	*)
		echo "Command not Found."
		echo "usage: services [create|start|stop]"
		exit 127;
		;;
esac

